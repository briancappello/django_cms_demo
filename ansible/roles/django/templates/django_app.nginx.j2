upstream {{ app_name }}_wsgi_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server unix:{{ gunicorn_socket_path }} fail_timeout=0;
}

server {
    listen 80;
    server_name {{ app_domain }};
{#    rewrite     ^ https://$server_name$request_uri? permanent;#}
{# } #}
{##}
{#server {#}
{#    listen              443;#}
{#    server_name         {{ app_domain }};#}

    access_log {{ nginx_access_log_file }};
    error_log {{ nginx_error_log_file }};

    location /static/ {
        alias {{ django_static_root }}/;
    }

    location /media/ {
        alias {{ django_media_root }}/;
    }

    location / {
        if (-f {{ virtualenv_dir }}/maintenance_on.html) {
            return 503;
        }

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
{#        proxy_set_header X-Forwarded-Proto https;#}
        proxy_set_header Host $http_host;
        proxy_redirect off;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        if (!-f $request_filename) {
            proxy_pass http://{{ app_name }}_wsgi_server;
            break;
        }
    }

    # Error pages
    error_page 500 502 504 /50x.html;
    location = /500.html {
        root {{ project_dir }}/{{ app_name }}/templates/;
    }

    error_page 503 /maintenance_on.html;
    location = /maintenance_on.html {
        root {{ virtualenv_dir }}/;
    }
}
